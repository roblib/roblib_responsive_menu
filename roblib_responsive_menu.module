<?php

/*
 * Implementation of hook_form_alter().
 */

function roblib_responsive_menu_form_block_admin_configure_alter(&$form, &$form_state) {

  $delta = $form['delta']['#value'];

  if (array_key_exists('superfish_name_' . $delta, $form['settings'])) {

    $form['settings']['sf-settings']['roblib_responsive_menu_toggle_' . $delta] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable Responsive Menu'),
      '#default_value' => variable_get('roblib_responsive_menu_toggle_' . $delta, 0),
      '#description' => t('If enabled, set a breakpoint and type of responsive menu.'),
    );

    $form['settings']['sf-settings']['roblib_responsive_menu_breakpoint_' . $delta] = array(
      '#type' => 'textfield',
      '#title' => t('Enable Responsive Menu'),
      '#default_value' => variable_get('roblib_responsive_menu_breakpoint_' . $delta, '800px'),
      '#size'          => 5,
      '#maxlength'     => 10,
      '#description' => t('If responsive menu is enabled, set a max breakpoint size.'),
      '#prefix'        => '<div id="div-rrm-breakopoint-collapse">',
      // Jquery hook to show/hide optional widgets.
    );

    $form['#submit'][] = 'roblib_responsive_menu_submit';

  }

}


/*
 * Custom submit handler
 */

function roblib_responsive_menu_submit(&$form, &$form_state) {

  $delta = $form['delta']['#value'];

  variable_set('roblib_responsive_menu_toggle_' . $delta, $form_state['values']['roblib_responsive_menu_toggle_' . $delta]);
  variable_set('roblib_responsive_menu_breakpoint_' . $delta, $form_state['values']['roblib_responsive_menu_breakpoint_' . $delta]);

}

function roblib_responsive_menu_block_info_alter(&$item) {
  dsm($item);
}

/*
* Implementation of hook_block_view_alter().
*/

function roblib_responsive_menu_block_view_alter(&$data, $block) {

  if ($block->module == 'superfish') {
    $delta = $block->delta;
    if (variable_get('roblib_responsive_menu_toggle_' . $delta) == '1') {

      $breakpoint = variable_get('roblib_responsive_menu_breakpoint_' . $delta);

      $name = '';
      if (!empty($data['content'])) {
        $data['content'] = '<div class="roblib-responsive-menu">' . $data['content'] . '</div>';
        if (isset($data['subject'])) {
          $name = $data['subject'];
        } else {
          $name = '';
        }

      $rsmmenu = 'var $rsm = jQuery.noConflict();' . "\n" . '$rsm' . "(function(){\n" . '$rsm("<select />").appendTo(".roblib-responsive-menu");' . "\n" . '$rsm("<option />", {"selected": "selected","value"   : "","text"    : "' . $name . '"}).appendTo(".roblib-responsive-menu select");' . "\n" . '$rsm(".roblib-responsive-menu a").each(function() {var el = $rsm(this);' . "\n" . '$rsm("<option />", {"value"   : el.attr("href"),"text"    : el.text()}).appendTo(".roblib-responsive-menu select");});' . "\n" . '$rsm(".roblib-responsive-menu select").change(function() {window.location = $rsm(this).find("option:selected").val();});' . "\n" . '});';

      drupal_add_js('http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js', array('type' => 'external', 'scope' => 'footer', 'weight' => 4));
      drupal_add_js($rsmmenu, array('type' => 'inline', 'scope' => 'footer', 'weight' => 6));
      drupal_add_css(drupal_get_path('module', 'roblib_responsive_menu') .'/css/roblib-responsive-select-menu.css', array('group' => CSS_THEME, 'every_page' => FALSE));
      drupal_add_css(drupal_get_path('module', 'roblib_responsive_menu') .'/css/roblib-responsive-select-menu--mq.css',
        array(
          'group' => CSS_THEME,
          'every_page' => FALSE,
          'media' => 'screen and (max-width: ' . $breakpoint . ')',
          'preprocess' => FALSE,
          'weight' => '9999',
        ));

      }

    }
  }

}
